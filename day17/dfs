package com.day17;

import java.util.*;

class GraphDFS {
    private LinkedList<Integer> adj[];

    GraphDFS(int v) {
        adj = new LinkedList[v];
        for (int i = 0; i < v; i++) adj[i] = new LinkedList<>();
    }

    void addEdge(int v, int w) {
        adj[v].add(w);
    }

    void DFS(int v, boolean visited[]) {
        visited[v] = true;
        System.out.print(v + " ");
        for (int n : adj[v]) {
            if (!visited[n]) DFS(n, visited);
        }
    }

    void DFSstart(int v) {
        boolean visited[] = new boolean[adj.length];
        DFS(v, visited);
    }
}

public class DFS {
    public static void main(String[] args) {
        GraphDFS g = new GraphDFS(5);
        g.addEdge(0, 1);
        g.addEdge(0, 2);
        g.addEdge(1, 3);
        g.addEdge(2, 4);

        g.DFSstart(0);
    }
}

